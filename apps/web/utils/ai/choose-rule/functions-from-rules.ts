import { Function } from "ai";
import uniq from "lodash/uniq";
import {
  ACTION_PROPERTIES,
  actionFunctionDefs,
  Properties,
} from "@/utils/ai/actions";
import { REQUIRES_MORE_INFO } from "@/utils/ai/choose-rule/consts";
import { AI_GENERATED_FIELD_VALUE } from "@/utils/config";
import { RuleWithActions } from "@/utils/types";

// This finds the properties that must be generated by the AI.
// NOTE: if two actions require the same field, the AI will generate the same value for both.
// For example, if two actions require the "content" field, the AI will generate the same content for both.

// We probably want to improve this in the future. So that action1.content and action2.content are different.
export function getFunctionsFromRules({ rules }: { rules: RuleWithActions[] }) {
  const rulesWithFunctions = rules.map((rule, i) => {
    // find the properties that must be generated by the AI
    // only include properties that must be generated by the AI
    const properties: Properties = {};

    rule.actions.forEach((action) => {
      ACTION_PROPERTIES.forEach((property) => {
        if (action[property] === AI_GENERATED_FIELD_VALUE) {
          properties[property] =
            actionFunctionDefs[action.type].parameters.properties?.[property];
        }
      });
    });

    const toAiGenerateValues = Object.keys(properties);

    // only include required properties that must be generated by the AI
    // and are required by the action
    const required = uniq(
      rule.actions.flatMap((action) => {
        return actionFunctionDefs[action.type].parameters.required.filter(
          (property) => toAiGenerateValues.includes(property),
        );
      }),
    );

    return {
      rule,
      shouldAiGenerateArgs: toAiGenerateValues.length > 0,
      function: {
        name: `rule_${i + 1}`,
        description: rule.instructions,
        parameters: {
          type: "object",
          properties,
          required,
        },
      },
    };
  });

  rulesWithFunctions.push({
    rule: {} as any,
    shouldAiGenerateArgs: false,
    function: {
      name: REQUIRES_MORE_INFO,
      description: "Request more information to handle the email.",
      parameters: {
        type: "object",
        properties: {},
        required: [],
      },
    },
  });

  const functions: Function[] = rulesWithFunctions.map((r) => r.function);

  return { functions, rulesWithFunctions };
}
